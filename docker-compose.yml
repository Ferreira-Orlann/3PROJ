services:
  prometheus:
    image: prom/prometheus
    volumes:
      - "./config/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "prometheus:/prometheus"
    networks:
      - localprom
    ports:
      - 9090:9090
    extra_hosts:
      - "host.docker.internal:host-gateway"
  postgres:
    image: postgres:17.4-alpine3.21
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  minio:
    image: quay.io/minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    command: ["server", "/data", "--console-address=:9001"]
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio:/data
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=myuser
      - RABBITMQ_DEFAULT_PASS=mypassword
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "5672:5672" # AMQP
      - "15672:15672" # Management Interface
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    restart: unless-stopped
  redis:
    image: redis:latest
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    ports:
      - "6379:6379"
    command: ["redis-server"]
  # elb:
  #   image: haproxy
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./config/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg

volumes:
  prometheus:
  postgres_data:
  minio:
  rabbitmq:
networks:
  localprom:
    driver: bridge

# docker run -d -p 9091:3000 --name=grafana --add-host=host.docker.internal:host-gateway --volume grafana-storage:/var/lib/grafana grafana/grafana 